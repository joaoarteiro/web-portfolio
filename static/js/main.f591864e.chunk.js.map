{"version":3,"sources":["Nav.jsx","pages/About/About.jsx","pages/Experience/Experience.jsx","pages/Projects/Projects.jsx","pages/Contact/Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["Nav","useState","isOpen","setOpen","className","activeClass","to","spy","smooth","offset","duration","onClick","console","log","About","id","Experience","window","open","Projects","openLink","value","on","Contact","href","target","rel","App","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f591864e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\nimport {Link} from 'react-scroll';\r\n\r\nfunction Nav() {\r\n   const [isOpen, setOpen] = useState(false);\r\n\r\n   const showNav = () => {\r\n     setOpen(!isOpen);  \r\n     console.log(isOpen);\r\n   };\r\n\r\n   \r\n\r\n  return (\r\n     \r\n     <nav>\r\n        <div className=\"logo\">\r\n           <h4>João Arteiro</h4>\r\n           </div>\r\n        <ul className={`nav-links ${isOpen ? \"show\": \"\"}`}>\r\n              <Link className=\"link\"\r\n                 activeClass=\"active\"\r\n                 to=\"about\"\r\n                 spy={true}\r\n                 smooth={true}\r\n                 offset={-70}\r\n                 duration={800}\r\n              >About</Link>\r\n\r\n              <Link className=\"link\"\r\n                 activeClass=\"active\"\r\n                 to=\"experience\"\r\n                 spy={true}\r\n                 smooth={true}\r\n                 offset={-70}\r\n                 duration={800}\r\n              >Experience</Link>\r\n\r\n              <Link className=\"link\"\r\n                 activeClass=\"active\"\r\n                 to=\"projects\"\r\n                 spy={true}\r\n                 smooth={true}\r\n                 offset={-70}\r\n                 duration={800}\r\n              >Projects</Link>\r\n\r\n              <Link className=\"link\"\r\n                 activeClass=\"active\"\r\n                 to=\"contact\"\r\n                 spy={true}\r\n                 smooth={true}\r\n                 offset={-70}\r\n                 duration={800}\r\n              >Links</Link>\r\n\r\n        </ul>\r\n        <div onClick={showNav} className=\"burger\">\r\n                 <div className=\"line1\"></div>\r\n                 <div className=\"line2\"></div>\r\n                 <div className=\"line3\"></div>\r\n            \r\n              </div>\r\n\r\n     </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport '../../App.css';\r\n\r\n\r\n\r\nfunction About() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"about-section\" id=\"about\">\r\n        <div className=\"title-about\">\r\n          <div className=\"title-name\">\r\n            <h1>Hey, I'm <span className=\"yellow-text\">João</span>.</h1>\r\n          </div>\r\n          <h5>I'm a software engineer living in Kraków, fascinated by computers since an early age.\r\n          <br /> I developed a love for programming, which granted me experience in mobile and web development.</h5>\r\n        </div>\r\n      </div >\r\n      <div className=\"arrow-down\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport '../../App.css'\r\n\r\n\r\nfunction Experience() {\r\n\r\n  const openLink = () => {\r\n    window.open(\"https://www.itsector.pt/en\");\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"experience-section\" id=\"experience\">\r\n        <div className=\"title\">\r\n          <h1>EXPERIENCE</h1>\r\n        </div>\r\n        <div className=\"experience-container\">\r\n            <div className=\"color-text\">Freelancer</div>\r\n            <div className=\"strong-title\">Web Developer\r\n               <div className=\"date-interval\">Sep 2020 - Present</div>\r\n            </div>\r\n            <div className=\"description\">My first experience using React. This is web application for an internet package plan simulator.\r\n            New features are still being implemented<br/> \r\n                 \r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"experience-container\" onClick={openLink}>\r\n            <div className=\"color-text\">ITSector</div>\r\n            <div className=\"strong-title\">Android Developer\r\n                <div className=\"date-interval\">Feb 2020 - Jul 2020</div>\r\n            </div>\r\n            <div className=\"description\">Created an mobile application to manage ITSector's events such as meeting and gatherings, using a RESTful API, Google authentication and JetPack.<br/>     \r\n            </div>\r\n        </div>\r\n      </div >\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Experience;\r\n","import React from 'react';\r\nimport '../../App.css'\r\n\r\n\r\nfunction Projects() {\r\n  const itSector = \"https://www.itsector.pt/en\"\r\n  const popMovies = \"https://github.com/joaoarteiro/popular_movies_app\"\r\n  const openLink = value => () => {\r\n    window.open(value);  \r\n    }\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"projects-section\" id=\"projects\">\r\n        <div className=\"title\">\r\n          <h1>PROJECTS</h1>\r\n          </div>\r\n          <div className=\"experience-container\">\r\n            <div className=\"color-text\">React Js | HTML</div>\r\n            <div className=\"strong-title\">E-commerce app\r\n               <div className=\"date-interval\">Sep 2020 - Present</div>\r\n            </div>\r\n            <div className=\"description\">Created an mobile application to manage ITSector's events such as meeting and gatherings, using a RESTful API, Google authentication and JetPack.<br/>     \r\n            </div>\r\n        </div>\r\n        <div className=\"experience-container\" onClick={openLink(itSector)} on>\r\n            <div className=\"color-text\">Java | Android | .NET | REST</div>\r\n            <div className=\"strong-title\">Events managment\r\n               <div className=\"date-interval\">Mar 2020 - Jul 2020</div>\r\n            </div>\r\n            <div className=\"description\">Created an mobile application to manage ITSector's events such as meeting and gatherings, using a RESTful API, Google authentication and JetPack.<br/>     \r\n            </div>\r\n        </div>\r\n        <div className=\"experience-container\" onClick={openLink(popMovies)}>\r\n            <div className=\"color-text\">Java | Android | REST</div>\r\n            <div className=\"strong-title\">Popular Movies app\r\n               <div className=\"date-interval\">Feb 2020 - Mar 2020</div>\r\n            </div>\r\n            <div className=\"description\">Created an mobile application to manage ITSector's events such as meeting and gatherings, using a RESTful API, Google authentication and JetPack.<br/>     \r\n            </div>\r\n        </div>\r\n      </div >\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\nimport '../../App.css'\r\n\r\nfunction Contact() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"contact-section\" id=\"contact\">\r\n        <div className=\"contact-icons\">\r\n          <a href=\"https://www.linkedin.com/in/joao-arteiro/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"fa fa-linkedin\"> </a>  \r\n          <a href=\"https://github.com/joaoarteiro\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"fa fa-github\"> </a> \r\n          <a href=\"https://www.facebook.com/joao.bernardo.566/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"fa fa-facebook\"> </a>  \r\n          <a href=\"mailto:joaoarteiro@gmail.com\" className=\"fa fa-envelope\"> </a>   \r\n          \r\n        </div>\r\n      </div >\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\nimport './App.css';\n\nimport Nav from './Nav';\nimport About from './pages/About/About';\nimport Experience from './pages/Experience/Experience';\nimport Projects from './pages/Projects/Projects';\nimport Contact from './pages/Contact/Contact';\n\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <About/>\n        <Experience/>\n        <Projects/>\n        <Contact/>\n        <footer>\n          @João Arteiro 2020\n          </footer>\n        <Switch>\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/experience\" component={Experience} />\n          <Route path=\"/projects\" component={Projects} />\n          <Route path=\"/contact\" component={Contact} />\n        </Switch>\n        \n      </div>\n    </Router>\n  \n  );\n\n  }\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}